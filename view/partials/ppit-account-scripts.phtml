
function connectRemoveIcon(id, target)
{
	$('#' + id).click(function () {
		$('#' + target).hide();
		filterAccountList();
	});
}

function getParams() {

	var params = '?', todo = true;

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	
	var min_<?php echo $propertyId ?> = document.getElementById('search_min_<?php echo $propertyId ?>').value;
	if (min_<?php echo $propertyId ?>) min_<?php echo $propertyId ?> = encodeDate(min_<?php echo $propertyId ?>);
	if (min_<?php echo $propertyId ?>.length >= 2) { params += 'min_<?php echo $propertyId ?>=' + min_<?php echo $propertyId ?> + '&'; todo = false; }

	var max_<?php echo $propertyId ?> = document.getElementById('search_max_<?php echo $propertyId ?>').value;
	if (max_<?php echo $propertyId ?>) max_<?php echo $propertyId ?> = encodeDate(max_<?php echo $propertyId ?>);
	if (max_<?php echo $propertyId ?>.length >= 2) { params += 'max_<?php echo $propertyId ?>=' + max_<?php echo $propertyId ?> + '&'; todo = false; }

	<?php elseif ($rendering == 'select') : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }

	<?php else : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>.length >= 2) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }
	
	<?php endif;?>

<?php endforeach;?>

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['more'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	
	var min_<?php echo $propertyId ?> = document.getElementById('search_min_<?php echo $propertyId ?>').value;
	if (min_<?php echo $propertyId ?>) min_<?php echo $propertyId ?> = encodeDate(min_<?php echo $propertyId ?>);
	if (min_<?php echo $propertyId ?>.length >= 2) { params += 'min_<?php echo $propertyId ?>=' + min_<?php echo $propertyId ?> + '&'; todo = false; }

	var max_<?php echo $propertyId ?> = document.getElementById('search_max_<?php echo $propertyId ?>').value;
	if (max_<?php echo $propertyId ?>) max_<?php echo $propertyId ?> = encodeDate(max_<?php echo $propertyId ?>);
	if (max_<?php echo $propertyId ?>.length >= 2) { params += 'max_<?php echo $propertyId ?>=' + max_<?php echo $propertyId ?> + '&'; todo = false; }

	<?php elseif ($rendering == 'select') : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }
	
	<?php else : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>.length >= 2) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }
	
	<?php endif;?>

<?php endforeach;?>

	<?php
	$todoTitle = (isset ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['todoTitle']) ? $context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['todoTitle'][$context->getLocale()] : $this->translate('active', 'ppit-core', $context->getLocale()));
	$searchTitle = (isset ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['searchTitle']) ? $context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['searchTitle'][$context->getLocale()] : $this->translate('search', 'ppit-core', $context->getLocale()));
	?>
	$('#mode-text').text((todo) ? '<?php echo $todoTitle ?>' : '<?php echo $searchTitle ?>');

	return params;
}

// Export the list
function exportAccountList() {

	var params = getParams();
	document.location.href = '<?php echo $this->url('commitmentAccount/export', array('type' => $type)) ?>' + params;
}

function eraseAccountSearch() {

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').val('');
	$('#search_max_<?php echo $propertyId ?>').val('');

	<?php else : ?>
	$('#search_<?php echo $propertyId ?>').val('');
	
	<?php endif;?>

<?php endforeach;?>

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['more'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').val('');
	$('#search_max_<?php echo $propertyId ?>').val('');

	<?php else : ?>
	$('#search_<?php echo $propertyId ?>').val('');
	
	<?php endif;?>

<?php endforeach;?>

	getAccountList(getParams(), '<?php echo $context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['order'] ?>', 'ASC');
}

function sortAccountList(criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getAccountList(getParams(), criterion, dir);
}

function filterAccountList() {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	else {
		criterion = descCriterion.split('-')[0];
		dir = 'ASC';
	}
	getAccountList(getParams(), criterion, dir);
}

function connectAccountSearchInputs() {

	$('#export-button').click(function () { exportAccountList(); });
	
	$('#erase-button').unbind();
	$('#erase-button').click(function () {Â eraseAccountSearch(); });

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });
	$('#search_max_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });

		<?php if ($context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_min_<?php echo $propertyId ?>").datepicker();
	$("#search_max_<?php echo $propertyId ?>").datepicker();
	$('#search_min_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
	$('#search_max_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
		<?php endif;?>
	
	<?php elseif ($rendering == 'select') : ?>
		$('#search_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
	
	<?php else : ?>
		$('#search_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });

		<?php if ($context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_<?php echo $propertyId ?>").datepicker();
	$('#search_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
		<?php endif;?>

	<?php endif;?>

<?php endforeach;?>

<?php foreach ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['more'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });
	$('#search_max_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });

		<?php if ($context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_min_<?php echo $propertyId ?>").datepicker();
	$("#search_max_<?php echo $propertyId ?>").datepicker();
	$('#search_min_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
	$('#search_max_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
		<?php endif;?>
	
	<?php elseif ($rendering == 'select') : ?>
		$('#search_<?php echo $propertyId ?>').change(function () { filterAccountList(); });

	<?php else : ?>
		$('#search_<?php echo $propertyId ?>').keyup(function () { filterAccountList(); });

		<?php if ($context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_<?php echo $propertyId ?>").datepicker();
	$('#search_<?php echo $propertyId ?>').change(function () { filterAccountList(); });
		<?php endif;?>
		
	<?php endif;?>

<?php endforeach;?>
}

// Load the list
function getAccountList(params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('commitmentAccount/list', array('type' => $type)) ?>' + params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('account-list-panel').innerHTML = xhttp.responseText;
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortAccountList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the grouped actions anchors
			$('.account-group-anchor').each(function () {
				$(this).click(function () {
					getAccountGroup();
				});
			});
			
			// Connect the detail anchors
			$('.account-detail-anchor').each(function () {
				$(this).click(function () {
					getAccountDetail($(this).attr('id').split('_')[1]);
				});
			});
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}

function connectAuditPanel()
{
	$('#audit-panel').hide();
	$('#audit-label').click(function () {
		if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#audit-panel').show();
			$('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#audit-panel').hide();
			$('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

<?php 
$properties = array();

foreach ($context->getConfig('commitmentAccount/update'.(($type) ? '/'.$type : '')) as $propertyId => $options) {
	$property = $context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['properties'][$propertyId];
	$properties[$propertyId] = array('type' => $property['type'], 'mandatory' => $options['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
}

$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Account', 'context' => $context, 'properties' => $properties)) 
?>

function connectAccountUpdateForm(id, action)
{

<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'date') : ?>
		$('#input_<?php echo $propertyId ?>').datepicker();
	<?php endif;?>
<?php endforeach ?>

	var form = document.getElementById('ppit-form');
	form.onsubmit = function(event) {
		
		event.preventDefault();
	
		// Check validity
		var validity;
		if (action == 'delete') validity = true;
		else {
			validity = checkAccountUpdateProperties(id);
			if ($('#new_password').val() != $('#new_password2').val()) {
				renderElement("new_password", "<?php echo $this->translate('Both passwords should be the same one', 'ppit-user', $context->getLocale()) ?>");
				validity = false;
			}
		}

		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'repository' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
				formData.append('<?php echo $propertyId ?>', document.getElementById('<?php echo $propertyId ?>').value);

	<?php elseif ($property['type'] == 'checkbox') : ?>
				formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));

	<?php elseif ($property['type'] == 'photo') : ?>
				var fileSelect = document.getElementById('<?php echo $propertyId ?>');
				if (fileSelect) {
					var files = fileSelect.files;
					for (var i = 0; i < files.length; i++) {
						var file = files[i];
						formData.append('<?php echo $propertyId ?>', file, file.name);
					}
				}

	<?php endif ?>

<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('commitmentAccount/update', array('type' => $type)) ?>/' + id;
			if (action) route += '/' + action;
			target = 'account-update-panel';
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
					document.getElementById(target).innerHTML = xhttp.responseText;
					filterAccountList();
					connectAccountUpdateForm(id, action);
					$('.action-btn').removeClass('btn-primary').addClass('btn-default');
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function getAccountUpdate(id, action) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('commitmentAccount/update', array('type' => $type)) ?>/' + id;
	if (action) route += '/' + action;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('account-update-panel').innerHTML = xhttp.responseText;
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});

			if (id) {
				$('#account-update-anchor').click(function () { getAccountUpdate(id, 'update'); });
				$('#account-delete-anchor').click(function () { getAccountUpdate(id, 'delete'); });
			}
			else $('#account-add-anchor').click(function () { getAccountUpdate(id, 'add'); });
			
			connectAccountUpdateForm(id, action);
			
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.action-btn').removeClass("btn-primary").addClass("btn-default");
	if (action == 'update') $('#account-update-anchor').removeClass("btn-default").addClass("btn-primary");
	else if (action == 'delete') $('#account-delete-anchor').removeClass("btn-default").addClass("btn-primary");
}

<?php 
$properties = array();
$properties['username'] = array('type' => 'input', 'mandatory' => false, 'maxSize' => 255);
$properties['state'] = array('type' => 'checkbox');
$properties['is_notified'] = array('type' => 'checkbox');
$properties['new_password'] = array('type' => 'input', 'mandatory' => false, 'maxSize' => 255);
$properties['locale'] = array('type' => 'select', 'mandatory' => false);
$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'User', 'context' => $context, 'properties' => $properties)) 
?>

function connectUserUpdateForm(id, action)
{

<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'date') : ?>
		$('#input_<?php echo $propertyId ?>').datepicker();
	<?php endif;?>
<?php endforeach ?>

	var form = document.getElementById('ppit-form');
	form.onsubmit = function(event) {
		
		event.preventDefault();
	
		// Check validity
		var validity = checkUserUpdateProperties(id);
		if ($('#new_password').val() != $('#new_password2').val()) {
			renderElement("new_password", "<?php echo $this->translate('Both passwords should be the same one', 'ppit-user', $context->getLocale()) ?>");
			validity = false;
		}

		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'repository' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
				formData.append('<?php echo $propertyId ?>', document.getElementById('<?php echo $propertyId ?>').value);

	<?php elseif ($property['type'] == 'checkbox') : ?>
				formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));

	<?php endif ?>

<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('commitmentAccount/updateUser', array('type' => $type)) ?>/' + id;
			if (action) route += '/' + action;
			target = 'account-update-panel';
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
					document.getElementById(target).innerHTML = xhttp.responseText;
					connectUserUpdateForm(id, action);
					$('.action-btn').removeClass('btn-primary').addClass('btn-default');
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function getUserUpdate(id, action) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('commitmentAccount/updateUser', array('type' => $type)) ?>/' + id;
	if (action) route += '/' + action;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('account-update-panel').innerHTML = xhttp.responseText;

			if (id) {
				$('#account-update-anchor').click(function () { getAccountUpdate(id, 'update'); });
				$('#account-delete-anchor').click(function () { getAccountUpdate(id, 'delete'); });
			}
			else $('#account-add-anchor').click(function () { getAccountUpdate(id, 'add'); });
			
			connectUserUpdateForm(id, action);
			
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.action-btn').removeClass("btn-primary").addClass("btn-default");
	if (action == 'update') $('#account-update-anchor').removeClass("btn-default").addClass("btn-primary");
	else if (action == 'delete') $('#account-delete-anchor').removeClass("btn-default").addClass("btn-primary");
}

<?php 
$properties = array();
$properties['contact_status'] = array('type' => 'select', 'mandatory' => false);

foreach ($context->getConfig('commitmentAccount/updateContact'.(($type) ? '/'.$type : '')) as $propertyId => $options) {
	$property = $context->getConfig('vcard/properties')[$propertyId];
	$properties[$propertyId] = array('type' => $property['type'], 'mandatory' => $options['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
}

$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Contact', 'context' => $context, 'properties' => $properties)) 
?>

<?php foreach (array('contact_1', 'user', 'contact_2', 'contact_3', 'contact_4') as $contactNumber) : ?>

function connect<?php echo $contactNumber ?>UpdateForm(id, action)
{
<?php foreach ($properties as $propertyId => $property) : ?>
	<?php if ($property['type'] == 'date') : ?>
		$('#input_<?php echo $propertyId ?>').datepicker();
	<?php endif;?>
<?php endforeach ?>

	var form = document.getElementById('ppit-form');
	form.onsubmit = function(event) {
		
		event.preventDefault();
	
		// Check validity
		var validity = checkContactUpdateProperties(id);

		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
	<?php foreach ($properties as $propertyId => $property) : ?>
		<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'repository' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
				formData.append('<?php echo $propertyId ?>', document.getElementById('<?php echo $propertyId ?>').value);

		<?php elseif ($property['type'] == 'checkbox') : ?>
				formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));

		<?php elseif ($property['type'] == 'photo') : ?>
				var fileSelect = document.getElementById('<?php echo $propertyId ?>');
				if (fileSelect) {
					var files = fileSelect.files;
					for (var i = 0; i < files.length; i++) {
						var file = files[i];
						formData.append('order_form', file, file.name);
					}
				}

		<?php endif ?>

	<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('commitmentAccount/updateContact', array('type' => $type, 'contactNumber' => $contactNumber)) ?>/' + id;
			if (action) route += '/' + action;
			target = 'account-update-panel';
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
					document.getElementById(target).innerHTML = xhttp.responseText;
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function get<?php echo $contactNumber ?>Update(id, action) {
	
	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('commitmentAccount/updateContact', array('type' => $type, 'contactNumber' => $contactNumber)) ?>/' + id;
	if (action) route += '/' + action;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('account-update-panel').innerHTML = xhttp.responseText;

			if (id) {
				$('#account-update-anchor').click(function () { get<?php echo $contactNumber ?>Update(id, 'update'); });
				$('#account-delete-anchor').click(function () { get<?php echo $contactNumber ?>Update(id, 'delete'); });
			}
			else $('#account-add-anchor').click(function () { get<?php echo $contactNumber ?>Update(id, 'add'); });

			connect<?php echo $contactNumber ?>UpdateForm(id, action);
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
/*	$('.action-btn').removeClass("btn-primary").addClass("btn-default");
	if (action == 'update') $('#account-update-anchor').removeClass("btn-default").addClass("btn-primary");
	else if (action == 'delete') $('#account-delete-anchor').removeClass("btn-default").addClass("btn-primary");*/
}

<?php endforeach;?>

// Load the list
function getCommitmentAccountList(params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('commitment/accountList', array('type' => $type)) ?>'
	route += params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('commitment-list-panel').innerHTML = xhttp.responseText;
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});
			
			// Connect the add anchors
			$('#commitment-add').click(function () {
				getCommitmentUpdate(0, '', params);
			});
			
			// Connect the detail anchors
			$('.commitment-detail-anchor').each(function () {
				$(this).click(function () {
					getCommitmentUpdate($(this).attr('id').split('_')[1], 'update', params);
				});
			});
			
			// Connect the delete anchors
			$('.commitment-delete-anchor').each(function () {
				$(this).click(function () {
					getCommitmentUpdate($(this).attr('id').split('_')[1], 'delete', params);
				});
			});

			$('.account-list-anchor').each(function () {
				$(this).click(function () {
					document.location.href = $(this).attr('id');
				});
			});
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}

// Load the detail panel
function getAccountDetail(id) {

	// Ensure the target is displayed
	$('#form_action').show();

	// Anchor to the new panel
	$(location).attr('hash', 'form_action');

	var route = '<?php echo $this->url('commitmentAccount/detail', array('type' => $type)) ?>' + '/' + id;

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('form_action').innerHTML = xhttp.responseText;
			
			connectAuditPanel();
			connectRemoveIcon('remove-anchor', 'form_action');

			getAccountUpdate(id, '');
			$('#contact_1-tab').addClass('active');

<?php foreach (array('contact_1', 'user', 'contact_2', 'contact_3', 'contact_4') as $tabId) : ?>
			$('#<?php echo $tabId ?>-tab').click(function () {
				$('.account-tab').removeClass('active');
				$('#<?php echo $tabId ?>-tab').addClass('active');
	<?php if ($tabId == 'contact_1') : ?>
				getAccountUpdate(id, '');
	<?php elseif ($tabId == 'user') : ?>
				getUserUpdate(id, '');
	<?php else : ?>
				get<?php echo $tabId ?>Update(id, '');
	<?php endif;?>
			});
<?php endforeach;?>

<?php if (array_key_exists('p-pit-engagements', $context->getApplications())) : ?>
			if (id != 0) getCommitmentAccountList('?account_id=' + id, 'identifier', 'DESC');
<?php endif;?>
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	$('#account-detail-anchor_' + id).removeClass("btn-default").addClass("btn-primary");
}

function activateAccount() {

	// Load the search panel and highlight the menu entry
	loadPanel('index_action', '<?php echo $this->url('commitmentAccount/search', array('type' => $type)) ?>');
	$('.menu-btn').removeClass("btn-primary").addClass("btn-default");
	var accountAnchor;
	accountAnchor = '#account-anchor';
	$(accountAnchor).removeClass("btn-default").addClass("btn-primary");

	<?php
	$todoTitle = (isset ($context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['todoTitle']) ? $context->getConfig('commitmentAccount/search'.(($type) ? '/'.$type : ''))['todoTitle'][$context->getLocale()] : $this->translate('active', 'ppit-core', $context->getLocale()));
	?>
	$('#mode-text').text('<?php echo $todoTitle ?>');
		
	// Connect the search inputs
	connectAccountSearchInputs();
	
	getAccountList('?', '<?php echo $context->getConfig('commitmentAccount'.(($type) ? '/'.$type : ''))['order'] ?>', 'ASC');
	
	$('#add-criteria').click(function () {
		mode = $('#add-criteria').text();
		if (mode == '<?php echo $this->translate('More criteria', 'ppit-core', $context->getLocale()) ?>') {
			$('#add-criteria').text('<?php echo $this->translate('Less criteria', 'ppit-core', $context->getLocale()) ?>');
			$('#search-area').show();
		}
		else {
			$('#add-criteria').text('<?php echo $this->translate('More criteria', 'ppit-core', $context->getLocale()) ?>');
			$('#search-area').hide();
		}
	});
	$('#search-area').hide();
}

/////////////////////////////
// Commitment update panel //
/////////////////////////////

<?php
$properties = array();

foreach ($context->getConfig('commitment/update'.(($type) ? '/'.$type : '')) as $propertyId => $options) {
	$property = $context->getConfig('commitment'.(($type) ? '/'.$type : ''))['properties'][$propertyId];
	$properties['commitment-'.$propertyId] = array('type' => $property['type'], 'mandatory' => $options['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
}

$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Commitment', 'context' => $context, 'properties' => $properties)) 
?>

function connectCommitmentUpdateForm(id, action, params)
{

	if (action == 'update') $('#commitment-update-anchor').removeClass('btn-default').addClass('btn-primary');
	if (action == 'delete') $('#commitment-delete-anchor').removeClass('btn-default').addClass('btn-primary');

<?php foreach ($properties as $property_id => $property) : ?>
	<?php if ($property['type'] == 'date') : ?>
		$('#input_<?php echo $property_id ?>').datepicker();
	<?php endif;?>
<?php endforeach ?>

	var form = document.getElementById('commitment-form');
	form.onsubmit = function(event) {
		
		event.preventDefault();
	
		// Check validity
		var validity = checkCommitmentUpdateProperties(id);
		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
<?php foreach ($properties as $propertyId => $property) : ?>

	<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'repository' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
				formData.append('<?php echo $propertyId ?>', document.getElementById('<?php echo $propertyId ?>').value);

	<?php elseif ($property['type'] == 'checkbox') : ?>
				formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));

	<?php elseif ($property['type'] == 'file') : ?>
				var fileSelect = document.getElementById('order_form');
				if (fileSelect) {
					var files = fileSelect.files;
					for (var i = 0; i < files.length; i++) {
						var file = files[i];
						formData.append('order_form', file, file.name);
					}
				}

	<?php endif ?>

<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('commitment/update', array('type' => $type)) ?>/' + id;
			if (action) route += '/' + action;
			route += params;
			target = 'commitment-update-panel';
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {

<?php if ($context->getConfig()['ppitCoreSettings']['isTraceActive']) : ?>
					console.log('post, route = ' + route);
					console.log(xhttp.responseText);
<?php endif;?>
					document.getElementById(target).innerHTML = xhttp.responseText;
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function getCommitmentUpdate(id, action, params) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('commitment/update', array('type' => $type)) ?>/' + id;
	if (action) route += '/' + action;
	route += params;
	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.readyState == 4) {
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
<?php endif;?>
			document.getElementById('commitment-update-panel').innerHTML = xhttp.responseText;

			if (id) {
				$('#commitment-update-anchor').click(function () { getCommitmentUpdate(id, 'update'); });
				$('#commitment-delete-anchor').click(function () { getCommitmentUpdate(id, 'delete'); });
			}
			else $('#commitment-add-anchor').click(function () { getCommitmentUpdate(id, 'add'); });
			
			connectCommitmentUpdateForm(id, action, params);
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}
