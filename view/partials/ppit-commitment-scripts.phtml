
function connectRemoveIcon(id, target)
{
	$('#' + id).click(function () {
		$('#' + target).hide();
		filterCommitmentList();
	});
}

function getParams() {

	// Create a new FormData object.
	var params = '?', todo = true;

<?php foreach ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	
	var min_<?php echo $propertyId ?> = document.getElementById('search_min_<?php echo $propertyId ?>').value;
	if (min_<?php echo $propertyId ?>) min_<?php echo $propertyId ?> = min_<?php echo $propertyId ?>;
	if (min_<?php echo $propertyId ?>.length >= 2) { params += 'min_<?php echo $propertyId ?>=' + min_<?php echo $propertyId ?> + '&'; todo = false; }

	var max_<?php echo $propertyId ?> = document.getElementById('search_max_<?php echo $propertyId ?>').value;
	if (max_<?php echo $propertyId ?>) max_<?php echo $propertyId ?> = max_<?php echo $propertyId ?>;
	if (max_<?php echo $propertyId ?>.length >= 2) { params += 'max_<?php echo $propertyId ?>=' + max_<?php echo $propertyId ?> + '&'; todo = false; }

	<?php elseif ($rendering == 'select') : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }

	<?php else : ?>

	var <?php echo $propertyId ?> = document.getElementById('search_<?php echo $propertyId ?>').value;
	if (<?php echo $propertyId ?>.length >= 2) { params += '<?php echo $propertyId ?>=' + <?php echo $propertyId ?> + '&'; todo = false; }
	
	<?php endif;?>

<?php endforeach;?>

	<?php
	$todoTitle = (isset ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['todoTitle']) ? $context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['todoTitle'][$context->getLocale()] : $this->translate('todo list', 'ppit-core', $context->getLocale()));
	$searchTitle = (isset ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['searchTitle']) ? $context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['searchTitle'][$context->getLocale()] : $this->translate('search', 'ppit-core', $context->getLocale()));
	?>
	$('#mode-text').text((todo) ? '<?php echo $todoTitle ?>' : '<?php echo $searchTitle ?>');

	return params;
}

// Export the list
function exportCommitmentList() {

	var params = getParams();
	document.location.href = '<?php echo $this->url('commitment/export', array('type' => $type)) ?>' + params;
}

function eraseCommitmentSearch() {

<?php foreach ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').val('');
	$('#search_max_<?php echo $propertyId ?>').val('');

	<?php else : ?>
	$('#search_<?php echo $propertyId ?>').val('');
	
	<?php endif;?>

<?php endforeach;?>

	getCommitmentList(getParams(), 'including_options_amount', 'DESC');
}

function sortCommitmentList(criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getCommitmentList(getParams(), criterion, dir);
}

function filterCommitmentList() {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	else {
		criterion = descCriterion.split('-')[0];
		dir = 'ASC';
	}
	getCommitmentList(getParams(), criterion, dir);
}

function connectCommitmentSearchInputs() {


	$('#export-button').click(function () { exportCommitmentList(); });
	
	$('#erase-button').unbind();
	$('#erase-button').click(function () {Â eraseCommitmentSearch(); });

<?php foreach ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['main'] as $propertyId => $rendering) : ?>

	<?php if ($rendering == 'range') : ?>
	$('#search_min_<?php echo $propertyId ?>').keyup(function () { filterCommitmentList(); });
	$('#search_max_<?php echo $propertyId ?>').keyup(function () { filterCommitmentList(); });

		<?php if ($context->getConfig('commitment'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_min_<?php echo $propertyId ?>").datepicker();
	$("#search_max_<?php echo $propertyId ?>").datepicker();
	$('#search_min_<?php echo $propertyId ?>').change(function () { filterCommitmentList(); });
	$('#search_max_<?php echo $propertyId ?>').change(function () { filterCommitmentList(); });
		<?php endif;?>
	
	<?php elseif ($rendering == 'select') : ?>
		$('#search_<?php echo $propertyId ?>').change(function () { filterCommitmentList(); });
	
	<?php else : ?>
		$('#search_<?php echo $propertyId ?>').keyup(function () { filterCommitmentList(); });

		<?php if ($context->getConfig('commitment'.(($type) ? '/'.$type : ''))['properties'][$propertyId]['type'] == 'date') : ?>
	$("#search_<?php echo $propertyId ?>").datepicker();
	$('#search_<?php echo $propertyId ?>').change(function () { filterCommitmentList(); });
		<?php endif;?>

	<?php endif;?>

<?php endforeach;?>
}

// Load the list
function getCommitmentList(params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('commitment/list', array('type' => $type)) ?>' + params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('ppitUser/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('commitment-list-panel').innerHTML = xhttp.responseText;
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortCommitmentList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the detail anchors
			$('.commitment-detail-anchor').each(function () {
				$(this).click(function () {
					getCommitmentDetail($(this).attr('id').split('_')[1]);
				});
			});
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

function connectAuditPanel()
{
	$('#audit-panel').hide();
	$('#audit-label').click(function () {
		if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#audit-panel').show();
			$('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#audit-panel').hide();
			$('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

/////////////////////////////
// Commitment update panel //
/////////////////////////////

<?php 
$properties = array();

foreach ($context->getConfig('commitment/update'.(($type) ? '/'.$type : '')) as $propertyId => $def) {
	$property = $context->getConfig('commitment'.(($type) ? '/'.$type : ''))['properties'][$propertyId];
	$properties[$propertyId] = array('type' => $property['type'], 'mandatory' => $def['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
}

$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Commitment', 'context' => $context, 'properties' => $properties)) 
?>

function getCommitmentUpdate(id, action) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('commitment/update', array('type' => $type)) ?>/' + id;
	if (action) route += '/' + action;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.readyState == 4) {
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
<?php endif;?>
			document.getElementById('commitment-update-panel').innerHTML = xhttp.responseText;
			
<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}

function fillRowPrice() {
<?php foreach ($products as $product) : ?>
	if ($('#product_identifier').val() == "<?php echo $product->reference ?>") $('#input_unit_price').val('<?php echo $product->variants[0]['price'] ?>');
<?php endforeach;?>
}

function fillOptionPrice(i) {
<?php foreach ($options as $option) : ?>
	if ($('#option_identifier-' + i).val() == "<?php echo $option->reference ?>") $('#input_option_unit_price-' + i).val('<?php echo $option->variants[0]['price'] ?>');
<?php endforeach;?>
}

function fillAddOptionPrice() {
<?php foreach ($options as $option) : ?>
	if ($('#option_identifier').val() == "<?php echo $option->reference ?>") $('#input_option_unit_price').val('<?php echo $option->variants[0]['price'] ?>');
<?php endforeach;?>
}

function connectCommitmentUpdateProductForm(id)
{
		var validity = true, error, number, val;
		$('#rows-error').text('');
		$('#rows-error').hide();
		
// Product identifier
		val = $('#product_identifier').val();
		if (!val) {
			$('#rows-error').text('<?php echo $this->translate('Please input a value', 'ppit-core', $context->getLocale()) ?>');
			$('#rows-error').show();
			document.getElementById('product_identifier').focus();
			validity = false;
		}
		else {
		    if (val.length > 255) {
				$('#rows-error').text('<?php echo $this->translate('The input is too long', 'ppit-core', $context->getLocale()) ?>');
				$('#rows-error').show();
				document.getElementById('product_identifier').focus();
				validity = false;
			}
		}
		
// Quantity
		number = $('#input_quantity').val();
		error = checkNumber(number, 0, 999999);
		if (error) {
			$('#rows-error').text(error);
			$('#rows-error').show();
			document.getElementById('input_quantity').focus();
			validity = false;
		}
	    else { 
			number = getNumber(number, 2);
			$('#quantity').val(number);
		}
		
// Unit price
		number = $('#input_unit_price').val();
		error = checkNumber(number, 0, 999999);
		if (error) {
			$('#rows-error').text(error);
			$('#rows-error').show();
			document.getElementById('input_unit_price').focus();
			validity = false;
		}
	    else { 
			number = getNumber(number, 2);
			$('#unit_price').val(number);
		}
	
		if (validity) {
			
			// Create a new FormData object.
			var formData = new FormData();
			formData.append('product_identifier', $('#product_identifier').val());
			formData.append('quantity', $('#quantity').val());
			formData.append('unit_price', $('#unit_price').val());
			formData.append('update_time', $('#update_time').val());
	
			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('commitment/updateProduct') ?>/' + id;
			xhttp.open('POST', route, true);
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
//					document.getElementById('commitment-options-panel').innerHTML = xhttp.responseText;
					getCommitmentDetail(id);
				}
			};
			xhttp.send(formData);
		}
}

function connectCommitmentUpdateOptionForm(id)
{
	var count, validity = true, error, number, val, i;
	$('#rows-error').text('');
	$('#rows-error').hide();

	count = $('#optionCount').val();
	for (i = 0; i < count; i++) {
		
// Option identifier
		val = $('#option_identifier-' + i).val();
	    if (val.length > 255) {
			$('#rows-error').text('<?php echo $this->translate('The input is too long', 'ppit-core', $context->getLocale()) ?>');
			$('#rows-error').show();
			document.getElementById('option_identifier-' + i).focus();
			validity = false;
		}
		
// Quantity
		number = $('#input_option_quantity-' + i).val();
		error = checkNumber(number, 0, 999999);
		if (error) {
			$('#rows-error').text(error);
			$('#rows-error').show();
			document.getElementById('input_option_quantity-' + i).focus();
			validity = false;
		}
	    else { 
			number = getNumber(number, 2);
			$('#option_quantity-' + i).val(number);
		}
		
// Unit price
		number = $('#input_option_unit_price-' + i).val();
		error = checkNumber(number, 0, 999999);
		if (error) {
			$('#rows-error').text(error);
			$('#rows-error').show();
			document.getElementById('input_option_unit_price-' + i).focus();
			validity = false;
		}
	    else { 
			number = getNumber(number, 2);
			$('#option_unit_price-' + i).val(number);
		}
	}

	if (validity) {

		// Create a new FormData object.
		var formData = new FormData();
		for (i = 0; i < count; i++) {
			formData.append('option_identifier-' + i, $('#option_identifier-' + i).val());
			formData.append('option_quantity-' + i, $('#option_quantity-' + i).val());
			formData.append('option_unit_price-' + i, $('#option_unit_price-' + i).val());
			formData.append('update_time', $('#update_time').val());
		}
	
		var xhttp = new XMLHttpRequest();
		var route, target;
		route = '<?php echo $this->url('commitment/updateOption') ?>/' + id + '/' + count;
		xhttp.open('POST', route, true);
		xhttp.onload = function () {
			if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
//				document.getElementById('commitment-options-panel').innerHTML = xhttp.responseText;
				getCommitmentDetail(id);
			}
		};
		xhttp.send(formData);
	}
}

function connectCommitmentUpdateTermForm(id)
{
	var count, validity = true, error, number, val, i;
	$('#terms-error').text('');
	$('#terms-error').hide();

	count = $('#termCount').val();
	for (i = 0; i < count; i++) {
		
// Caption
		caption = $('#term_caption-' + i).val();
	    if (caption.length > 255) {
			$('#terms-error').text('<?php echo $this->translate('The input is too long', 'ppit-core', $context->getLocale()) ?>');
			$('#terms-error').show();
			document.getElementById('term_caption-' + i).focus();
			validity = false;
		}

// Due date	
 		term_due_date = $('#input_term_due_date-' + i).val();
		if (caption) {
			if (term_due_date == "") {
				$('#terms-error').text('<?php echo $this->translate('Please input a value', 'ppit-core', $context->getLocale()) ?>');
				$('#terms-error').show();
				document.getElementById('input_term_due_date-' + i).focus();
				validity = false;
			}
		 	else {
				error = checkDate(term_due_date);
				if (error) {
					$('#terms-error').text(error);
					$('#terms-error').show();
					document.getElementById('input_term_due_date-' + i).focus();
					validity = false;
				}
				else {
					term_due_date = encodeDate(term_due_date);
					$('#term_due_date-' + i).val(term_due_date);
				}
			}
		}
		
// Means of payment
		val = $('#term_means_of_payment-' + i).val();
		if (caption && !val) {
			$('#terms-error').text('<?php echo $this->translate('Please input a value', 'ppit-core', $context->getLocale()) ?>');
			$('#terms-error').show();
			document.getElementById('term_means_of_payment-' + i).focus();
			validity = false;
		}
		else {
		    if (val.length > 255) {
				$('#rows-error').text('<?php echo $this->translate('The input is too long', 'ppit-core', $context->getLocale()) ?>');
				$('#rows-error').show();
				document.getElementById('term_means_of_payment-' + i).focus();
				validity = false;
			}
		}
		
// Status
		val = $('#term_status-' + i).val();
		if (caption && !val) {
			$('#terms-error').text('<?php echo $this->translate('Please input a value', 'ppit-core', $context->getLocale()) ?>');
			$('#terms-error').show();
			document.getElementById('term_status-' + i).focus();
			validity = false;
		}
		else {
		    if (val.length > 255) {
				$('#rows-error').text('<?php echo $this->translate('The input is too long', 'ppit-core', $context->getLocale()) ?>');
				$('#rows-error').show();
				document.getElementById('term_status-' + i).focus();
				validity = false;
			}
		}
		
// Amount
		number = $('#input_term_amount-' + i).val();
		error = checkNumber(number, 0, 999999);
		if (error) {
			$('#terms-error').text(error);
			$('#terms-error').show();
			document.getElementById('input_term_amount-' + i).focus();
			validity = false;
		}
	    else { 
			number = getNumber(number, 2);
			$('#term_amount-' + i).val(number);
		}
	}

	if (validity) {

		// Create a new FormData object.
		var formData = new FormData();
		for (i = 0; i < count; i++) {
			formData.append('term_caption-' + i, $('#term_caption-' + i).val());
			formData.append('term_due_date-' + i, $('#term_due_date-' + i).val());
			formData.append('term_means_of_payment-' + i, $('#term_means_of_payment-' + i).val());
			formData.append('term_status-' + i, $('#term_status-' + i).val());
			formData.append('term_amount-' + i, $('#term_amount-' + i).val());
			formData.append('term_document-' + i, $('#term_document-' + i).val());
		}
	
		var xhttp = new XMLHttpRequest();
		var route, target;
		route = '<?php echo $this->url('commitment/updateTerm') ?>/' + id + '/' + count;
		xhttp.open('POST', route, true);
		xhttp.onload = function () {
			if (xhttp.readyState == 4 <?php if (!$context->getConfig()['ppitCoreSettings']['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
//				document.getElementById('commitment-options-panel').innerHTML = xhttp.responseText;
				getCommitmentDetail(id);
			}
		};
		xhttp.send(formData);
	}
}

// Load the detail panel
function getCommitmentDetail(id) {

	// Ensure the target is displayed
	$('#form_action').show();

	// Anchor to the new panel
	$(location).attr('hash', 'form_action');

	var route = '<?php echo $this->url('commitment/detail', array('type' => $type)) ?>/' + id;

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('ppitUser/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('form_action').innerHTML = xhttp.responseText;

			connectAuditPanel();
			connectRemoveIcon('remove-anchor', 'form_action');
			getCommitmentUpdate(id, '');
			
			$('#row-anchor').click(function () {
				$('.row-tr').hide();
				$('#row-tr').show();
			});
			$('.row-update-anchor').click(function () {
				$('.row-tr').hide();
				i = $(this).attr('id').split('_')[1]
				$('#row-tr_' + i).show();
			});
			$('#row-add-anchor').click(function () {
				$('.row-tr').hide();
				$('#row-tr-add').show();
			});
			$('.row-delete-anchor').click(function () {
				$('.row-tr').hide();
				i = $(this).attr('id').split('_')[1]
				$('#option_identifier-' + i).val('');
				$('#input_option_quantity-' + i).val('');
				$('#input_option_unit_price-' + i).val('');
				$('#row-tr_' + i).show();
			});
			$('.term-update-anchor').click(function () {
				$('.term-tr').hide();
				i = $(this).attr('id').split('_')[1]
				$('#term-tr_' + i).show();
			});
			$('#term-add-anchor').click(function () {
				$('.term-tr').hide();
				$('#term-tr-add').show();
			});
			$('.term-delete-anchor').click(function () {
				$('.term-tr').hide();
				i = $(this).attr('id').split('_')[1]
				$('#term_caption-' + i).val('');
				$('#input_term_due_date-' + i).val('');
				$('#term_means_of_payment-' + i).val('');
				$('#term_status-' + i).val('');
				$('#input_term_amount-' + i).val('');
				$('#term-tr_' + i).show();
			});
			$('#product_identifier').change(fillRowPrice);
			$('.option_identifier').each(function () {
				$(this).change(function () {
					fillOptionPrice($(this).attr('id').split('-')[1]);
				});
			});
			$('.term_due_date').each(function () {
				$(this).datepicker();
			});
			$('#row-action').click(function() {
				connectCommitmentUpdateProductForm(id);
			});
			$('.option-action').click(function() {
				connectCommitmentUpdateOptionForm(id);
			});
			$('.term-action').click(function() {
				connectCommitmentUpdateTermForm(id);
			});
	<?php if (!$config['ppitCoreSettings']['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	$('#commitment-detail-anchor_' + id).removeClass("btn-default").addClass("btn-primary");
}

function activateCommitment() {

	// Load the search panel and highlight the menu entry
	loadPanel('index_action', '<?php echo $this->url('commitment/search', array('type' => $type)) ?>');
	$('.menu-btn').removeClass("btn-primary").addClass("btn-default");
	var commitmentAnchor;
	commitmentAnchor = '#commitment-<?php echo $type ?>-anchor';
	$(commitmentAnchor).removeClass("btn-default").addClass("btn-primary");
	
	<?php
	$todoTitle = (isset ($context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['todoTitle']) ? $context->getConfig('commitment/search'.(($type) ? '/'.$type : ''))['todoTitle'][$context->getLocale()] : $this->translate('todo list', 'ppit-core', $context->getLocale()));
	?>
	$('#mode-text').text('<?php echo $todoTitle ?>');
	
	// Connect the search inputs
	connectCommitmentSearchInputs();

	var params = '?';
<?php foreach ($params as $id => $value) : ?>	
	params += '<?php echo $id?>=<?php echo $value ?>&'
<?php endforeach;?>
	getCommitmentList(params, 'including_options_amount', 'DESC');
}
